# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Autogenerated by Thrift Compiler (0.17.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require "thrift"

module PhoneType
  MOBILE = 0
  HOME = 1
  WORK = 2
  VALUE_MAP = { 0 => "MOBILE", 1 => "HOME", 2 => "WORK" }.freeze
  VALID_VALUES = Set.new([MOBILE, HOME, WORK]).freeze
end

class Name; end

class Phone; end

class Person; end

class PhoneBook; end

class Name
  include ::Thrift::Struct_Union
  include ::Thrift::Struct
  FIRSTNAME = 1
  LASTNAME = 2

  FIELDS = {
    FIRSTNAME => { type: ::Thrift::Types::STRING, name: "firstName" },
    LASTNAME => { type: ::Thrift::Types::STRING, name: "lastName" }
  }.freeze

  def struct_fields
    FIELDS
  end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class Phone
  include ::Thrift::Struct_Union
  include ::Thrift::Struct
  TYPE = 1
  NUMBER = 2

  FIELDS = {
    TYPE => { type: ::Thrift::Types::I32, name: "type", default: 0, enum_class: ::PhoneType },
    NUMBER => { type: ::Thrift::Types::I32, name: "number" }
  }.freeze

  def struct_fields
    FIELDS
  end

  def validate
    return if @type.nil? || ::PhoneType::VALID_VALUES.include?(@type)
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, "Invalid value of field type!")
  end

  ::Thrift::Struct.generate_accessors self
end

class Person
  include ::Thrift::Struct_Union
  include ::Thrift::Struct
  NAME = 1
  PHONES = 2

  FIELDS = {
    NAME => { type: ::Thrift::Types::STRUCT, name: "name", class: ::Name },
    PHONES => { type: ::Thrift::Types::LIST, name: "phones",
element: { type: ::Thrift::Types::STRUCT, class: ::Phone } }
  }.freeze

  def struct_fields
    FIELDS
  end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PhoneBook
  include ::Thrift::Struct_Union
  include ::Thrift::Struct
  PEOPLE = 1

  FIELDS = {
    PEOPLE => { type: ::Thrift::Types::LIST, name: "people",
element: { type: ::Thrift::Types::STRUCT, class: ::Person } }
  }.freeze

  def struct_fields
    FIELDS
  end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end
